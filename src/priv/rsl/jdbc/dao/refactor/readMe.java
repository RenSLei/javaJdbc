package priv.rsl.jdbc.dao.refactor;

/*
 * 
 * 
 * 说明：
refactor包中演示了模板设计模式以及策略模式：
	模板设计模式：
		即通过即完成一件事有多个步骤，其中有些步骤相同，有些步骤不同，将相同的步骤抽取出来形成超类，
		不同的步骤的信息通过参数传递，当其他事情想要完成类似的操作的时候就只需要继承这个超类就可以了
		然而，有时候这个超类里一些步骤，超类无法完成，必须交给子类去完成，
		这时候就定义抽象方法，交给子类去重写该方法，这样就达到了目的。
	策略模式：
		类组合的方式，策略之间可以互相替换
		接口作为参数的方式，在模板类(这里是MyDaoTemplate,即代替之前的AbstractDao这个超类的类，
		但它不是抽象类)中调用该接口的方法，在实现类中调用模板类的对应的方法，
		将sql语句，参数，接口这个参数采用匿名类的形式传递，这样会大大提高代码的灵活性
	
	*
	*
	*/





public class readMe {

}
